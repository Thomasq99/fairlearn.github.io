
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/plot_quickstart.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_plot_quickstart.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_plot_quickstart.py:


==========================
MetricFrame visualizations
==========================

.. GENERATED FROM PYTHON SOURCE LINES 11-42



.. image:: /auto_examples/images/sphx_glr_plot_quickstart_001.png
    :alt: Show all metrics, accuracy, precision, recall, false positive rate, true positive rate, selection rate, count
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    array([[<AxesSubplot:title={'center':'accuracy'}, xlabel='sex'>,
            <AxesSubplot:title={'center':'precision'}, xlabel='sex'>,
            <AxesSubplot:title={'center':'recall'}, xlabel='sex'>],
           [<AxesSubplot:title={'center':'false positive rate'}, xlabel='sex'>,
            <AxesSubplot:title={'center':'true positive rate'}, xlabel='sex'>,
            <AxesSubplot:title={'center':'selection rate'}, xlabel='sex'>],
           [<AxesSubplot:title={'center':'count'}, xlabel='sex'>,
            <AxesSubplot:xlabel='sex'>, <AxesSubplot:xlabel='sex'>]],
          dtype=object)





|

.. code-block:: default

    from fairlearn.metrics import MetricFrame, false_positive_rate, true_positive_rate, selection_rate, count
    import pandas as pd
    from sklearn.datasets import fetch_openml
    from sklearn.metrics import accuracy_score, precision_score, recall_score
    from sklearn.tree import DecisionTreeClassifier

    data = fetch_openml(data_id=1590, as_frame=True)
    X = pd.get_dummies(data.data)
    y_true = (data.target == '>50K') * 1
    sex = data.data['sex']

    classifier = DecisionTreeClassifier(min_samples_leaf=10, max_depth=4)
    classifier.fit(X, y_true)
    y_pred = classifier.predict(X)

    # Analyze metrics using MetricFrame
    metrics = {
        'accuracy': accuracy_score,
        'precision': precision_score,
        'recall': recall_score,
        'false positive rate': false_positive_rate,
        'true positive rate': true_positive_rate,
        'selection rate': selection_rate,
        'count': count}
    metric_frame = MetricFrame(metrics=metrics,
                               y_true=y_true,
                               y_pred=y_pred,
                               sensitive_features=sex)
    metric_frame.by_group.plot.bar(
        subplots=True, layout=[3, 3], legend=False, figsize=[12, 8],
        title='Show all metrics')


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  5.683 seconds)


.. _sphx_glr_download_auto_examples_plot_quickstart.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_quickstart.py <plot_quickstart.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_quickstart.ipynb <plot_quickstart.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
